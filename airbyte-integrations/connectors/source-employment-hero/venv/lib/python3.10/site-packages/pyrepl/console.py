#
# Copyright (c) 2021 Airbyte, Inc., all rights reserved.
#


class Event(object):
    """An Event.  `evt' is 'key' or somesuch."""
    __slots__ = 'evt', 'data', 'raw'

    def __init__(self, evt, data, raw=''):
        self.evt = evt
        self.data = data
        self.raw = raw

    def __repr__(self):
        return 'Event(%r, %r)' % (self.evt, self.data)

    def __eq__(self, other):
        return (self.evt == other.evt and
                self.data == other.data and
                self.raw == other.raw)

class Console(object):
    """Attributes:

    screen,
    height,
    width,
    """

    def refresh(self, screen, xy):
        pass

    def prepare(self):
        pass

    def restore(self):
        pass

    def move_cursor(self, x, y):
        pass

    def set_cursor_vis(self, vis):
        pass

    def getheightwidth(self):
        """Return (height, width) where height and width are the height
        and width of the terminal window in characters."""
        pass

    def get_event(self, block=1):
        """Return an Event instance.  Returns None if |block| is false
        and there is no event pending, otherwise waits for the
        completion of an event."""
        pass

    def beep(self):
        pass

    def clear(self):
        """Wipe the screen"""
        pass

    def finish(self):
        """Move the cursor to the end of the display and otherwise get
        ready for end.  XXX could be merged with restore?  Hmm."""
        pass

    def flushoutput(self):
        """Flush all output to the screen (assuming there's some
        buffering going on somewhere)."""
        pass

    def forgetinput(self):
        """Forget all pending, but not yet processed input."""
        pass

    def getpending(self):
        """Return the characters that have been typed but not yet
        processed."""
        pass

    def wait(self):
        """Wait for an event."""
        pass
